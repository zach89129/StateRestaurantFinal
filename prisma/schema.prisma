generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Product {
  id            BigInt         @id @map("trx_product_id")
  sku           String         @unique
  title         String
  description   String?
  longDescription String?      @map("long_description")
  manufacturer  String?
  category      String?
  aqcat         String?        @map("aqcat") // Collection category
  pattern       String?        @map("pattern") // Pattern name without prefix
  quickship     Boolean        @default(false) @map("quickship") // Quick ship status
  uom           String?
  qtyAvailable  Int?           @map("qty_available")
  tags          String?        // Keep for any other tags
  images        ProductImage[]
  venueProducts VenueProduct[] @relation("ProductToVenueProduct")

  @@map("products")
}

model ProductImage {
  id        Int      @id @default(autoincrement())
  url       String
  productId BigInt   @map("product_id")
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())

  @@map("product_images")
}

model Venue {
  trxVenueId   Int           @id @map("trx_venue_id")
  venueName    String        @map("venue_name")
  venueProduct VenueProduct?
  customers    Customer[]    @relation("CustomerToVenue")

  @@map("venues")
}

model Customer {
  email         String   @unique
  phone         String?  @unique
  trxCustomerId Int      @id @map("trx_customer_id")
  seePrices     Boolean  @default(false)
  updatedAt     DateTime @updatedAt
  venues        Venue[]  @relation("CustomerToVenue")

  @@map("customers")
}

model VenueProduct {
  id         Int       @id @default(autoincrement())
  trxVenueId Int       @unique @map("trx_venue_id")
  venue      Venue     @relation(fields: [trxVenueId], references: [trxVenueId])
  products   Product[] @relation("ProductToVenueProduct")

  @@map("venue_products")
}

model otp {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  code      String
  createdAt DateTime @default(now())
  expiresAt DateTime

  @@map("otps")
}

model UserActivityLog {
  id        Int      @id @default(autoincrement())
  email     String
  timestamp DateTime @default(now())

  @@index([email])
  @@map("user_activity_logs")
}
